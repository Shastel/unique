const assert = require('assert');

const unique = require('./src');

describe('unique', function() {
  it('Should return array of unique numbers', function() {
    const list = [ 1, 2, 3, 4, 4, 5 ];

    assert.deepEqual(unique(list), [ 1, 2, 3, 4, 5 ]);
  });

  it('Should return array of unique strings', function() {
    const list = [ 'test', 'test1', 'test' ];

    assert.deepEqual(unique(list), [ 'test', 'test1' ]);
  });

  it('Should return empty array if undefined passed', function() {
    assert.deepEqual(unique(), []);
  });

  it('Should return only one occurance of empty string', function() {
    const list = [ '', '', 'test' ];

    assert.deepEqual(unique(list), [ '', 'test' ]);
  });

  it('Should treat null and undefined as different values', function() {
    const list = [ undefined, undefined, undefined, undefined, null, null, null, null];

    assert.deepEqual(unique(list), [ undefined, null]);
  });


  it('Should return array of unique numbers', function() {
  const list = [18,56,5,68,28,81,71,31,58,91,30,48,67,70,10,6,78,49,9,66,72,71,42,94,8,82,21,29,14,16,18,76,34,57,74,35,4,78,22,32,98,41,22,56,78,75,16,65,37,72,24,65,14,23,69,8,16,83];

  assert.deepEqual(unique(list), [18,56,5,68,28,81,71,31,58,91,30,48,67,70,10,6,78,49,9,66,72,42,94,8,82,21,29,14,16,76,34,57,74,35,4,22,32,98,41,75,65,37,24,23,69,83]);
});


it('Should return array of unique numbers', function() {
  const list = [44,26,98,51,9,1,86,68,93,86,81,65,30,42,37,35,87,97,91,77,84,61,62,60,1,66,38,0,73];

  assert.deepEqual(unique(list), [44,26,98,51,9,1,86,68,93,81,65,30,42,37,35,87,97,91,77,84,61,62,60,66,38,0,73]);
});


it('Should return array of unique numbers', function() {
  const list = [58,79,71,84,8,55,34,68,57,0,51,41];

  assert.deepEqual(unique(list), [58,79,71,84,8,55,34,68,57,0,51,41]);
});


it('Should return array of unique numbers', function() {
  const list = [8,43,38,57,39,15,23,85,37,55,43,67,27,45,9,57,80,67,23,9,84,5,8,37,72,9,8,4,57,54,35,91,92,68,54,0,85,17,87,71,48,98,51,63,59,31,4,43,8,30,1,29,52,80,57,89,62,37,23,75,13,99,37,90,82,73,79,38,34,89,47,49,31,81,93,10,58,71,89,30,36,57,88,94,45];

  assert.deepEqual(unique(list), [8,43,38,57,39,15,23,85,37,55,67,27,45,9,80,84,5,72,4,54,35,91,92,68,0,17,87,71,48,98,51,63,59,31,30,1,29,52,89,62,75,13,99,90,82,73,79,34,47,49,81,93,10,58,36,88,94]);
});


it('Should return array of unique numbers', function() {
  const list = [65,18,9,94,18,68,11,57,52,71,89,20,44,37,89,82,81,1,40,63,60,90,14,85,56,56,13,90,49,96,99,21,45,79,79];

  assert.deepEqual(unique(list), [65,18,9,94,68,11,57,52,71,89,20,44,37,82,81,1,40,63,60,90,14,85,56,13,49,96,99,21,45,79]);
});


it('Should return array of unique numbers', function() {
  const list = [82,32,13,87,97,23,93,7,32,43,90,41,13,84,81,67,0,80,23,0,91,71,51,10,42,96,92,3,47,71,10,52,70,59,75,38,13,71,50,32,5,23,52,61,19,75,76,50,44,25,62,67,59,14,52,16,50,67,47,84,14,9,91,20,6,82,10,25,42,72,15,79,56,15,87,51,11,95,19,71,88,13,2,76,13,34,12,27,1,6,45,96,52,32,84,44,60,0];

  assert.deepEqual(unique(list), [82,32,13,87,97,23,93,7,43,90,41,84,81,67,0,80,91,71,51,10,42,96,92,3,47,52,70,59,75,38,50,5,61,19,76,44,25,62,14,16,9,20,6,72,15,79,56,11,95,88,2,34,12,27,1,45,60]);
});


it('Should return array of unique numbers', function() {
  const list = [96,93,36,77,31,53,82,54,45,45,62,42,56,70,77,19,94,2,25,84,8,2,7,45,34,84,22,59,43,4];

  assert.deepEqual(unique(list), [96,93,36,77,31,53,82,54,45,62,42,56,70,19,94,2,25,84,8,7,34,22,59,43,4]);
});


it('Should return array of unique numbers', function() {
  const list = [42,43,94,15,57,12,72,54,47,81,38,4,62,34,32,75,60,14,65,20,24,35,71,6,4,83,29,24,34,88,20,47,7,52,34,60,6,48,88,13,85,87];

  assert.deepEqual(unique(list), [42,43,94,15,57,12,72,54,47,81,38,4,62,34,32,75,60,14,65,20,24,35,71,6,83,29,88,7,52,48,13,85,87]);
});


it('Should return array of unique numbers', function() {
  const list = [13,77,14,21,74,82,50,2,14,92,9,78,49,50,85,74,59,20,77,43,96,58,86,9,32,0,59,19,19,92,10,75,15];

  assert.deepEqual(unique(list), [13,77,14,21,74,82,50,2,92,9,78,49,85,59,20,43,96,58,86,32,0,19,10,75,15]);
});


it('Should return array of unique numbers', function() {
  const list = [58,46,17,87,4,49,1,67,51,99];

  assert.deepEqual(unique(list), [58,46,17,87,4,49,1,67,51,99]);
});


it('Should return array of unique numbers', function() {
  const list = [21,77,63,35,56,17,32,37,75,55,16,63,78,4,77,39,94,86,53,13,34,21,46,5,81,29,6,98,36,83,14,89,25,37,86,58,44];

  assert.deepEqual(unique(list), [21,77,63,35,56,17,32,37,75,55,16,78,4,39,94,86,53,13,34,46,5,81,29,6,98,36,83,14,89,25,58,44]);
});


it('Should return array of unique numbers', function() {
  const list = [29,93,44,73,34,4,88,45,64,86,79,3,33,52,76,57,9,81,22,4,87,95,17,77,64,88,72,24,91,85,75,97,39,30,31,48,73,26,60,46,48,48,10,35,87,73,69,25,7,48,35,56,51,97,32,91,25,94,51,92,98,34,5,62,0,62,49,20,86,87,88,38,64,9,23,19,86,38,66,97,81,1,43,54,50,86,74,42,92,50,79,62,4,53];

  assert.deepEqual(unique(list), [29,93,44,73,34,4,88,45,64,86,79,3,33,52,76,57,9,81,22,87,95,17,77,72,24,91,85,75,97,39,30,31,48,26,60,46,10,35,69,25,7,56,51,32,94,92,98,5,62,0,49,20,38,23,19,66,1,43,54,50,74,42,53]);
});


it('Should return array of unique numbers', function() {
  const list = [45,83,58,85,43,2,44,51,56,10,72,6,91,63,1,49,81,21,22,87,90,86,45,14,9,28,69,15,78,50,61,56,89,30,30,46,76,49,55,10,17,26,24,66,81,8,20,65,10,22,40,54,8,43,7,58,39,7,75,84,48,39,1,96,73,42,74,2,34,42,28,94,24,15,64,25,39,12,14,10,49,33,56,60,47,7,20,8,19,79,48,77,87,82,81,75,51,90];

  assert.deepEqual(unique(list), [45,83,58,85,43,2,44,51,56,10,72,6,91,63,1,49,81,21,22,87,90,86,14,9,28,69,15,78,50,61,89,30,46,76,55,17,26,24,66,8,20,65,40,54,7,39,75,84,48,96,73,42,74,34,94,64,25,12,33,60,47,19,79,77,82]);
});


it('Should return array of unique numbers', function() {
  const list = [26,58,85,99,3,1,81,19,96,79,43,46,15,68,43,75,56,39,93];

  assert.deepEqual(unique(list), [26,58,85,99,3,1,81,19,96,79,43,46,15,68,75,56,39,93]);
});


it('Should return array of unique numbers', function() {
  const list = [28,82,7,30,15,6,20,39,70,93,29,35,30,72,78,32,44,98,55,16,22,12,68,14,39,75,48,55,29,2,9,27,35,23,82,10,26,63,92,13,99,93,23,45,18,50,79,24,25,88,37,77,47,88,7,87,15,96,3,89,93,44,78,7,34,91,46,4,4,78,57,25,93,63,64,60,57,92,58,45,72,61,70,48,70,1,94,11,56,5,82,54,75,26];

  assert.deepEqual(unique(list), [28,82,7,30,15,6,20,39,70,93,29,35,72,78,32,44,98,55,16,22,12,68,14,75,48,2,9,27,23,10,26,63,92,13,99,45,18,50,79,24,25,88,37,77,47,87,96,3,89,34,91,46,4,57,64,60,58,61,1,94,11,56,5,54]);
});


it('Should return array of unique numbers', function() {
  const list = [70,20,17,5,22,3,68,24,86,12,17,62,76,66,93,70,13,37,94,22,87,1,81,79,28,65,74,24,82,35,53,56,3,36,97,21,85,48,85,97,35,82,59,5,96,26,91,3,44,95,35,24,73,61,1,11,10];

  assert.deepEqual(unique(list), [70,20,17,5,22,3,68,24,86,12,62,76,66,93,13,37,94,87,1,81,79,28,65,74,82,35,53,56,36,97,21,85,48,59,96,26,91,44,95,73,61,11,10]);
});


it('Should return array of unique numbers', function() {
  const list = [95,8,12,7,61,49,96,18,36,1,3];

  assert.deepEqual(unique(list), [95,8,12,7,61,49,96,18,36,1,3]);
});


it('Should return array of unique numbers', function() {
  const list = [5,42,99,3,79,13,72,54,74,70,58,87,48,56,94,62,75,36,46,25,46,28,4,81,21,96,61,67,54,83,80,25,7,8,77,40,45,56,20,75,10,47,53,71,99,65,43,85,65,23,85,67,72,21,13,12,14,87,43];

  assert.deepEqual(unique(list), [5,42,99,3,79,13,72,54,74,70,58,87,48,56,94,62,75,36,46,25,28,4,81,21,96,61,67,83,80,7,8,77,40,45,20,10,47,53,71,65,43,85,23,12,14]);
});


it('Should return array of unique numbers', function() {
  const list = [75,22,58,32,8,78,73,97,39,79,9,72,99,80,1,12,91,47,30,76,34,60,9,73,23,45,64,73,92,17,13,95,74,81,9,49,13,76,37,22,71,94,53,65,31,59,57,68,47,29,84,17,41,69,76,67,15,74,34,45,38,13,14,72,68,26,26,43,81,96,6,40,18,8,90,78];

  assert.deepEqual(unique(list), [75,22,58,32,8,78,73,97,39,79,9,72,99,80,1,12,91,47,30,76,34,60,23,45,64,92,17,13,95,74,81,49,37,71,94,53,65,31,59,57,68,29,84,41,69,67,15,38,14,26,43,96,6,40,18,90]);
});


it('Should return array of unique numbers', function() {
  const list = [86,9,64,34,17,32,47,62,97,92,37,0,39,95,50];

  assert.deepEqual(unique(list), [86,9,64,34,17,32,47,62,97,92,37,0,39,95,50]);
});


it('Should return array of unique numbers', function() {
  const list = [78,15,86,80,17,0,24,39,89,83,44,8,95,77,98,30,99,47,13,57,99,54,34,86,83,42,78,52,72,91,48,85,28,20,23,2,45,12,19,43,75,17,11,32,89,20,1,5,77,80,53,59,67,57,82,23,30,63,28,91,16,39,14,14,90,90,85];

  assert.deepEqual(unique(list), [78,15,86,80,17,0,24,39,89,83,44,8,95,77,98,30,99,47,13,57,54,34,42,52,72,91,48,85,28,20,23,2,45,12,19,43,75,11,32,1,5,53,59,67,82,63,16,14,90]);
});


it('Should return array of unique numbers', function() {
  const list = [51,23,77,61,30,54,17];

  assert.deepEqual(unique(list), [51,23,77,61,30,54,17]);
});


it('Should return array of unique numbers', function() {
  const list = [90,77,66,46,6,61,53,88,71,19,94,56,28,17,75,12,7,81,92,3,20,65,59,72,14,39,56,33,52,79,16,69,4,28,83,94,11,61,63,21,53,65,27,93,77,79,35,74,32,38,16,13,11,83,14,41,85,77,22,10,72,10,29,1,27,83,22,25,44,5,58,50,54,94,70,26,59,40,63];

  assert.deepEqual(unique(list), [90,77,66,46,6,61,53,88,71,19,94,56,28,17,75,12,7,81,92,3,20,65,59,72,14,39,33,52,79,16,69,4,83,11,63,21,27,93,35,74,32,38,13,41,85,22,10,29,1,25,44,5,58,50,54,70,26,40]);
});


it('Should return array of unique numbers', function() {
  const list = [6,3,55,63,7,38,59,1,42,45,2,41,0,33,74,67,67,3,61,95,63,90,95,23,10,94,70,58,98,21,61,4,86,42,76,58,32,11,36,60,40,13,15,31,11,17,25,35,95,56,56,81,0,20,52,91,67,35,24,52,38,40,37,37,20,42,40];

  assert.deepEqual(unique(list), [6,3,55,63,7,38,59,1,42,45,2,41,0,33,74,67,61,95,90,23,10,94,70,58,98,21,4,86,76,32,11,36,60,40,13,15,31,17,25,35,56,81,20,52,91,24,37]);
});


it('Should return array of unique numbers', function() {
  const list = [61,55,12,9,49,57,14,34,38,82,81,31,71,77,74,38,40,29,9,36,27,66,13,3,29,37,1,71,98,9,46,25,7,64,79,88,25,6,90,97,6];

  assert.deepEqual(unique(list), [61,55,12,9,49,57,14,34,38,82,81,31,71,77,74,40,29,36,27,66,13,3,37,1,98,46,25,7,64,79,88,6,90,97]);
});


it('Should return array of unique numbers', function() {
  const list = [28,94,4,88,75,64,83,85,27,97,50,4,12,48,3,59,73,72,86,97,66,19,52,87,78];

  assert.deepEqual(unique(list), [28,94,4,88,75,64,83,85,27,97,50,12,48,3,59,73,72,86,66,19,52,87,78]);
});


it('Should return array of unique numbers', function() {
  const list = [20,49,0,81,43,6,97];

  assert.deepEqual(unique(list), [20,49,0,81,43,6,97]);
});


it('Should return array of unique numbers', function() {
  const list = [72,71,22,33,16,35,3,64,33,42,36,36,79,4,5,67,26,9,90,43,70,73,35,19,54,34,36,66,46,84,11,60,60,21,92,62,87,76,24,69,35,55,15,43,18,89,80,44,29,95,22,18,37,96,54,78,11,64,70,64,40,29,25,47,78,10,85,97,49,54,80,86,40,44,54,75,40,78];

  assert.deepEqual(unique(list), [72,71,22,33,16,35,3,64,42,36,79,4,5,67,26,9,90,43,70,73,19,54,34,66,46,84,11,60,21,92,62,87,76,24,69,55,15,18,89,80,44,29,95,37,96,78,40,25,47,10,85,97,49,86,75]);
});


it('Should return array of unique numbers', function() {
  const list = [40,40,1,83,68,86,74,74,21,62,8,0,88,2,17,11,85,76,27,12,32,16,36,30,91,52,60,10,70,56,46,61,67,22,80,90,79,21,72,21,49,61,10,25,98,41,59,97,52,47,53,60,59,97,98,37,9,53,55,57,48,10,37,20,24,41,8,73,28,95];

  assert.deepEqual(unique(list), [40,1,83,68,86,74,21,62,8,0,88,2,17,11,85,76,27,12,32,16,36,30,91,52,60,10,70,56,46,61,67,22,80,90,79,72,49,25,98,41,59,97,47,53,37,9,55,57,48,20,24,73,28,95]);
});


it('Should return array of unique numbers', function() {
  const list = [69,0,92,60,11,3,17,54,67,42,91,32,57,82,39,87,92,8,27,37,1,91,60,61,96,14,97,84,79,40,90,64,30,1,99,16,1,87,95,44,31,14,18,85,91,77,63,21,8,98,92,9,18,47,13,99,29,63,44,15,80,69,15,89,40];

  assert.deepEqual(unique(list), [69,0,92,60,11,3,17,54,67,42,91,32,57,82,39,87,8,27,37,1,61,96,14,97,84,79,40,90,64,30,99,16,95,44,31,18,85,77,63,21,98,9,47,13,29,15,80,89]);
});


it('Should return array of unique numbers', function() {
  const list = [36,19,8,71,52,92,82,99,99,52,82,92,83,47,96,99,27,94,24,1,18,63,4,29,3,4,30,30,75,25,68,95,85,57,9,41,82,74,30,55,33,61,10,10,56,88,60,26,59,3,9,51,99,86,79,99,61,30,39,95,5,26,14,25,52,1,20,49,32,18];

  assert.deepEqual(unique(list), [36,19,8,71,52,92,82,99,83,47,96,27,94,24,1,18,63,4,29,3,30,75,25,68,95,85,57,9,41,74,55,33,61,10,56,88,60,26,59,51,86,79,39,5,14,20,49,32]);
});


it('Should return array of unique numbers', function() {
  const list = [67,70,19,25,82,5,87,47,66,77,25,25,90,93,98,62,85,20,84,78,31,14,53,79,2,22,0,48,48,31,91,38,7,88,35,16,81,70,22,53,30,89,62,65,23,92,3,73,86,14,86,31,62,40,59,47,55,84,34,41,44,92,63,38,14,69,5,82,42,31,48,80,83,21,38,49,10,97,89,91,88,73,94,95,66,26,12,46,67,64,9,17,40,37,48,84];

  assert.deepEqual(unique(list), [67,70,19,25,82,5,87,47,66,77,90,93,98,62,85,20,84,78,31,14,53,79,2,22,0,48,91,38,7,88,35,16,81,30,89,65,23,92,3,73,86,40,59,55,34,41,44,63,69,42,80,83,21,49,10,97,94,95,26,12,46,64,9,17,37]);
});


it('Should return array of unique numbers', function() {
  const list = [56,56];

  assert.deepEqual(unique(list), [56]);
});


it('Should return array of unique numbers', function() {
  const list = [4,64,70,94,66,78,28,57,16,40,99,1,70,26,47,63,66,53,72,19,86,70];

  assert.deepEqual(unique(list), [4,64,70,94,66,78,28,57,16,40,99,1,26,47,63,53,72,19,86]);
});


it('Should return array of unique numbers', function() {
  const list = [90,66,78,28,68,93,39,85,15,41,18,59,48,59,25,16,98,24,97,44,3,97,43,90,95,62,20,32,33,77,88,2,52,30,3,84,70,87,91,11,49,85,17,11,73,25,29,81,55,29,58,19,56,56,26,8,6,6,19,36,54,34,94,58,90,34,85,32,40,45,79,71,17,48,99,47,73,41];

  assert.deepEqual(unique(list), [90,66,78,28,68,93,39,85,15,41,18,59,48,25,16,98,24,97,44,3,43,95,62,20,32,33,77,88,2,52,30,84,70,87,91,11,49,17,73,29,81,55,58,19,56,26,8,6,36,54,34,94,40,45,79,71,99,47]);
});


it('Should return array of unique numbers', function() {
  const list = [62,69,63,61,34,70,65,89,80,17,98,37,43,45,88,71,91,15,65,27,92,74,45,7,71,17,51,30,68,1,45,30,66,42,21,79,45,99,14,63,4,33,62,89,53,50,13,91,84,76,10,20,18,14,28,20,11,85,55,74];

  assert.deepEqual(unique(list), [62,69,63,61,34,70,65,89,80,17,98,37,43,45,88,71,91,15,27,92,74,7,51,30,68,1,66,42,21,79,99,14,4,33,53,50,13,84,76,10,20,18,28,11,85,55]);
});


it('Should return array of unique numbers', function() {
  const list = [50,15,52,11,31,65,35];

  assert.deepEqual(unique(list), [50,15,52,11,31,65,35]);
});


it('Should return array of unique numbers', function() {
  const list = [52,91,49,90,44,39,99,98,96,11,67,32,96,79,95,73,52,87,26,21,19,97,18,28,27,16,46,36,81,54,98,16,6,34,65,83,81,7,76,5,99,58,33,24,97,25,12,63,57,9,93,33,10,35,60,13,46,29,32,27,53,84,28];

  assert.deepEqual(unique(list), [52,91,49,90,44,39,99,98,96,11,67,32,79,95,73,87,26,21,19,97,18,28,27,16,46,36,81,54,6,34,65,83,7,76,5,58,33,24,25,12,63,57,9,93,10,35,60,13,29,53,84]);
});


it('Should return array of unique numbers', function() {
  const list = [44,29,82,40,0,76,4,64,76,81,71,12,98,23,71,97,40,21,18,24,89,59,93,37,62,20,99,3,95,9,42,83,11,99,26,71,95,16,20,12,84,29,69,82,76,81,13,65,39,73,42,9,76,80];

  assert.deepEqual(unique(list), [44,29,82,40,0,76,4,64,81,71,12,98,23,97,21,18,24,89,59,93,37,62,20,99,3,95,9,42,83,11,26,16,84,69,13,65,39,73,80]);
});


it('Should return array of unique numbers', function() {
  const list = [4,58,93,63,46,6,11,15,22,24,38,62,18,49,66,24,10,87,92,89,67,45,2,59,33,79,97,39,81,32,8,25];

  assert.deepEqual(unique(list), [4,58,93,63,46,6,11,15,22,24,38,62,18,49,66,10,87,92,89,67,45,2,59,33,79,97,39,81,32,8,25]);
});


it('Should return array of unique numbers', function() {
  const list = [23,20,60,86,92,48,77,21,42,66,63,75,74,7,4,60,53,90,99,31,56,59,81,46,62,41,42,74,68,81,66,11,41,89,86,80,47,87,82,26,1,80,93];

  assert.deepEqual(unique(list), [23,20,60,86,92,48,77,21,42,66,63,75,74,7,4,53,90,99,31,56,59,81,46,62,41,68,11,89,80,47,87,82,26,1,93]);
});


it('Should return array of unique numbers', function() {
  const list = [92,78,46,56,85,34,48,50,18,63,41,5,83,53,79,64,93,28,33,15,14,23,64,68,57,1,37,1,81,18,68,27,30,79,5,71,60,83,44,6,36,83,75,16,13,96,90,43,62,82,78,80,50,79,30,35,61,97,9,73,77,30,66,15,72,33,53,13,76,68,15,19,8,96,42,66,8,14,95,78,61,68,67,82,5,72,10,90,92,36,91,24,28,47,11,83,20,55];

  assert.deepEqual(unique(list), [92,78,46,56,85,34,48,50,18,63,41,5,83,53,79,64,93,28,33,15,14,23,68,57,1,37,81,27,30,71,60,44,6,36,75,16,13,96,90,43,62,82,80,35,61,97,9,73,77,66,72,76,19,8,42,95,67,10,91,24,47,11,20,55]);
});


it('Should return array of unique numbers', function() {
  const list = [44,27,90,90,56,70,79,54,49,35,64,77,42,72,55,42,54,54,68,18,73,67,62,48,32,8,25,58,56,47,83,83,85,48,22,30,44,45,55,79,42,77,2,59,48,9,38,9,57,66,10,32,2,16,99,41,13,23,51,32,80,99,49,42,64,30,40,80,54,75,64,57,12,94,54,86,55,70,71,13,62,20,63,97,47,13,11,39,43,95,27,11];

  assert.deepEqual(unique(list), [44,27,90,56,70,79,54,49,35,64,77,42,72,55,68,18,73,67,62,48,32,8,25,58,47,83,85,22,30,45,2,59,9,38,57,66,10,16,99,41,13,23,51,80,40,75,12,94,86,71,20,63,97,11,39,43,95]);
});


it('Should return array of unique numbers', function() {
  const list = [65,0,86,57,81,75,78,25,62,54,42,17,76,39,36,20,31,94,58,38,45,60,32,90,19,61,67,87,45,99,52,5,31];

  assert.deepEqual(unique(list), [65,0,86,57,81,75,78,25,62,54,42,17,76,39,36,20,31,94,58,38,45,60,32,90,19,61,67,87,99,52,5]);
});


it('Should return array of unique numbers', function() {
  const list = [22,28,73,15,54,77,78,54,45,61,31,49,13,12,10,82,18,78,70,77,67,63,63,44,78,39,47,0,60,19,2,20,42,89,67,1,8,20,99,91,37,8,43,14,81,62,61,20,73,10,38,34,41,18,53,72,97,84,36,66,4,34,15,56,12,96,7,4,39,34,22,28,74,42,84,12,25,48,66,73,23,70,44,34,43,38,28,98,0,5,21,94,91,56,8,95,88,18];

  assert.deepEqual(unique(list), [22,28,73,15,54,77,78,45,61,31,49,13,12,10,82,18,70,67,63,44,39,47,0,60,19,2,20,42,89,1,8,99,91,37,43,14,81,62,38,34,41,53,72,97,84,36,66,4,56,96,7,74,25,48,23,98,5,21,94,95,88]);
});


it('Should return array of unique numbers', function() {
  const list = [33,68,17,87,33,72,58,29,46,96,79,64,9,99,31,10,20,97,49,89,71,24,3,10,49,6,19,81,56,42,93,25,65,65,48,79,93];

  assert.deepEqual(unique(list), [33,68,17,87,72,58,29,46,96,79,64,9,99,31,10,20,97,49,89,71,24,3,6,19,81,56,42,93,25,65,48]);
});


it('Should return array of unique numbers', function() {
  const list = [58,83,49,88,78,26,94,54,88,29,60,91,28,29,43,71,62,4,79,52,11,17,80,48,54,1,65,64,94,69,53,67,4,68,45,64,64,0,64,56,88,93,10,59,56,43,11,97,40,73,89,26,27,64,43,3,11,36,88,50,89,91,2,73,44,96,96,15,32,93,85,74,39,75,89,91,81,32,10,46,74,17,51,98,10,91,47,17];

  assert.deepEqual(unique(list), [58,83,49,88,78,26,94,54,29,60,91,28,43,71,62,4,79,52,11,17,80,48,1,65,64,69,53,67,68,45,0,56,93,10,59,97,40,73,89,27,3,36,50,2,44,96,15,32,85,74,39,75,81,46,51,98,47]);
});


it('Should return array of unique numbers', function() {
  const list = [74,2,78,43,59,96,90,53,12,64,81,83,54,55,32,10,35,64,38,98,41,35,53,3,7,74,40,90,70,14,4,81,84,86,96,45,89,44,47,91,18,64,54,22,60,75,16];

  assert.deepEqual(unique(list), [74,2,78,43,59,96,90,53,12,64,81,83,54,55,32,10,35,38,98,41,3,7,40,70,14,4,84,86,45,89,44,47,91,18,22,60,75,16]);
});


it('Should return array of unique numbers', function() {
  const list = [95,71,43,41,27,6];

  assert.deepEqual(unique(list), [95,71,43,41,27,6]);
});


it('Should return array of unique numbers', function() {
  const list = [12,33,43,4,50,18];

  assert.deepEqual(unique(list), [12,33,43,4,50,18]);
});


it('Should return array of unique numbers', function() {
  const list = [74,38,35,91,99,37,65,96,37,9,23,41,15,34,78,94,82,64,40,61,18,39,20,26,7,62,28,4,35,32,40,66,24,88,72,24,71,92,27,13,90,99,84,3,96,70,51,20,68,80,84,59,74,20,51,2,68,10,92,13,46,26,79,10,62,92];

  assert.deepEqual(unique(list), [74,38,35,91,99,37,65,96,9,23,41,15,34,78,94,82,64,40,61,18,39,20,26,7,62,28,4,32,66,24,88,72,71,92,27,13,90,84,3,70,51,68,80,59,2,10,46,79]);
});


it('Should return array of unique numbers', function() {
  const list = [69,66,71];

  assert.deepEqual(unique(list), [69,66,71]);
});


it('Should return array of unique numbers', function() {
  const list = [66,51,24,76,99,84,47,13,67,25,26,28,78,49,1,1,7,81,63,81,36,81,66,24,61,16,4,90,95,19,76,33,71,97,4,85,48,68,63,95,23,9,46,97,34,5,39,67,89,31,84,46,86,80,14,41,18,87,42];

  assert.deepEqual(unique(list), [66,51,24,76,99,84,47,13,67,25,26,28,78,49,1,7,81,63,36,61,16,4,90,95,19,33,71,97,85,48,68,23,9,46,34,5,39,89,31,86,80,14,41,18,87,42]);
});


it('Should return array of unique numbers', function() {
  const list = [49,7,67,34,38,58,8,52,48,48,85,7,8,46,53,42,46,34,29,22,91,39,82,98,98,12,7,2,64,94,94,32,34,46,28];

  assert.deepEqual(unique(list), [49,7,67,34,38,58,8,52,48,85,46,53,42,29,22,91,39,82,98,12,2,64,94,32,28]);
});


it('Should return array of unique numbers', function() {
  const list = [81,64,39,1,29,90,60,59,54,11,73,13,99,56,42,25,74,64,48,80,38,45,9,10,62,76,72,88,59,12,5,15,95,33,1,18,59,21,31,2,26,64,83,62,47,59,45,51,75,25,69,84,26,59,79,84,88,39,54,6,95,7,33,45,52,2,38,52,7,30,25,82,93,86,65,27,25,59,64,41];

  assert.deepEqual(unique(list), [81,64,39,1,29,90,60,59,54,11,73,13,99,56,42,25,74,48,80,38,45,9,10,62,76,72,88,12,5,15,95,33,18,21,31,2,26,83,47,51,75,69,84,79,6,7,52,30,82,93,86,65,27,41]);
});


it('Should return array of unique numbers', function() {
  const list = [9,68,20,93,52,81,52,60,14,85,87,3,89,37,60,11,79,83,8,60,71,57,66,48,37,14,67,25,26,89,36,28,88,1,15,9,44,15,59,90,39,70,37,89,49,99,72,31,67,56,63,60,3,96,23,59,95];

  assert.deepEqual(unique(list), [9,68,20,93,52,81,60,14,85,87,3,89,37,11,79,83,8,71,57,66,48,67,25,26,36,28,88,1,15,44,59,90,39,70,49,99,72,31,56,63,96,23,95]);
});


it('Should return array of unique numbers', function() {
  const list = [24,82,97,44,39,54,86,19,19,5,33,26,34,53,6,32,31,63,1,69,31,74,89,63,90,43,81,84,94,51,39,50,26,81,45,74,48,99,17,18,40,72,38,99,35,31,72,49,31,40,89,91,20,75,75,71,25,36,49,21,49,6,0,78];

  assert.deepEqual(unique(list), [24,82,97,44,39,54,86,19,5,33,26,34,53,6,32,31,63,1,69,74,89,90,43,81,84,94,51,50,45,48,99,17,18,40,72,38,35,49,91,20,75,71,25,36,21,0,78]);
});


it('Should return array of unique numbers', function() {
  const list = [93,69,39,22,98,18,70,40,99,42,65,50,11,67,20,84,98,85,50,9,65,69,76,82,8,40,40,96,84,24,46,6,4,5,44,47,10,14,7,11,90,72,41,43,50,19,39,83,99,20,7,34,45,79,95,89,30,43,10,98,85,51];

  assert.deepEqual(unique(list), [93,69,39,22,98,18,70,40,99,42,65,50,11,67,20,84,85,9,76,82,8,96,24,46,6,4,5,44,47,10,14,7,90,72,41,43,19,83,34,45,79,95,89,30,51]);
});


it('Should return array of unique numbers', function() {
  const list = [18,72,32,69,87,67,54,81,62,6,17,8,27,52,5,11,86,62,95,81];

  assert.deepEqual(unique(list), [18,72,32,69,87,67,54,81,62,6,17,8,27,52,5,11,86,95]);
});


it('Should return array of unique numbers', function() {
  const list = [47,93,77];

  assert.deepEqual(unique(list), [47,93,77]);
});


it('Should return array of unique numbers', function() {
  const list = [4,54,64,70,83,69,63,75,93,74,0,14,68,49,43,91,62,75,21,25,13,95,27,70,87,5,37,25,42,83,66,7,11,41,0,94,30];

  assert.deepEqual(unique(list), [4,54,64,70,83,69,63,75,93,74,0,14,68,49,43,91,62,21,25,13,95,27,87,5,37,42,66,7,11,41,94,30]);
});


it('Should return array of unique numbers', function() {
  const list = [45,61,45,64,29,54,69,77,79,97,16,39,42,73,49,50,56,70,3,48,96,85,9,61,66,73,45,65,42,52,70,96,25,11,86,44,38,26,17,64,59,17,52,29,75,72,3,74,4,21,55,13,84,14,71,75,91,80,26,34,59,24,59,58,39,93,98,71,76,58,58,70,70,98,36,84,37,95,17,42,11,90,53,24,23,54,92,24,40,50];

  assert.deepEqual(unique(list), [45,61,64,29,54,69,77,79,97,16,39,42,73,49,50,56,70,3,48,96,85,9,66,65,52,25,11,86,44,38,26,17,59,75,72,74,4,21,55,13,84,14,71,91,80,34,24,58,93,98,76,36,37,95,90,53,23,92,40]);
});


it('Should return array of unique numbers', function() {
  const list = [97,52,36,99,26,41,64,83,54,65,14,38,71,46,67,15,10,78,28,16,58,54,48,53,77,28,53,18,50,73,12,54,70,48,38,26,9,5,20,67,58,76,9,68,99,98,45,16,89,94,86,21,94,59,36,27,33,81,80,21,26,85,42,50,50,5,75,97,98,96,52,19,92];

  assert.deepEqual(unique(list), [97,52,36,99,26,41,64,83,54,65,14,38,71,46,67,15,10,78,28,16,58,48,53,77,18,50,73,12,70,9,5,20,76,68,98,45,89,94,86,21,59,27,33,81,80,85,42,75,96,19,92]);
});


it('Should return array of unique numbers', function() {
  const list = [88,70,28,17,1,69,15,57,37,30,63,39,47,79,49,42,86,75,47,26,83,25,52,81,24,22,90,2,35,60,62,16,23,16,21,55,51,52];

  assert.deepEqual(unique(list), [88,70,28,17,1,69,15,57,37,30,63,39,47,79,49,42,86,75,26,83,25,52,81,24,22,90,2,35,60,62,16,23,21,55,51]);
});


it('Should return array of unique numbers', function() {
  const list = [55,55];

  assert.deepEqual(unique(list), [55]);
});


it('Should return array of unique numbers', function() {
  const list = [38,58,64,83,69,75,64,59,51,76];

  assert.deepEqual(unique(list), [38,58,64,83,69,75,59,51,76]);
});


it('Should return array of unique numbers', function() {
  const list = [91,7,10,95,0,82,27,37,57,22,10,49,98,18,48,17,48,32,53,69,4,65,69,87,23,24,38];

  assert.deepEqual(unique(list), [91,7,10,95,0,82,27,37,57,22,49,98,18,48,17,32,53,69,4,65,87,23,24,38]);
});


it('Should return array of unique numbers', function() {
  const list = [89,74,69,20,50,8,0,52,77,55,45,57,90,93,73,97,94,76,59,2,22,71,40,45,81,6];

  assert.deepEqual(unique(list), [89,74,69,20,50,8,0,52,77,55,45,57,90,93,73,97,94,76,59,2,22,71,40,81,6]);
});


it('Should return array of unique numbers', function() {
  const list = [35,55,49,4,25,59,75,70,69,60,6,59,83,53,4,7,30,18,36,23,19,11,73,44,49,32,15,3,15,74,84,6,25,67,25,93,47,86,27,30,80,53,27,67,99,47,14,92,81,11,57,36,7,38,86,54,31,25,50,55,66,22,95,93,37,79,64,86];

  assert.deepEqual(unique(list), [35,55,49,4,25,59,75,70,69,60,6,83,53,7,30,18,36,23,19,11,73,44,32,15,3,74,84,67,93,47,86,27,80,99,14,92,81,57,38,54,31,50,66,22,95,37,79,64]);
});


it('Should return array of unique numbers', function() {
  const list = [57,23,45,87,71,73,57,63,77,38,32,34,39,77,97,64,45,25,0,2,49,46,63,73,32,91,75,88,83,1,20,40,5,46,53,51,61,1,12,82,61,15,4,90,98,80,79,28,23,2,14,69,86,48,8,48,17,35,26,12,55,35,66,61,52,36,66,39,17,90,44,91,69,45,1,96,11,42];

  assert.deepEqual(unique(list), [57,23,45,87,71,73,63,77,38,32,34,39,97,64,25,0,2,49,46,91,75,88,83,1,20,40,5,53,51,61,12,82,15,4,90,98,80,79,28,14,69,86,48,8,17,35,26,55,66,52,36,44,96,11,42]);
});


it('Should return array of unique numbers', function() {
  const list = [94,44,25,16,25,59];

  assert.deepEqual(unique(list), [94,44,25,16,59]);
});


it('Should return array of unique numbers', function() {
  const list = [9,32,65,8,67,82,81,12,79,58,67,36,88,73,49,33,20,95,99,99,19,11,27,7,18,97,84,74];

  assert.deepEqual(unique(list), [9,32,65,8,67,82,81,12,79,58,36,88,73,49,33,20,95,99,19,11,27,7,18,97,84,74]);
});


it('Should return array of unique numbers', function() {
  const list = [96,43,75,51,19,95,92,24,89,82,27,29,60,34,39,26,23,27,83,98,94,82];

  assert.deepEqual(unique(list), [96,43,75,51,19,95,92,24,89,82,27,29,60,34,39,26,23,83,98,94]);
});


it('Should return array of unique numbers', function() {
  const list = [54,11,13,37,27,78,51,56,42,35,56,50,47,77,18,2,30,95,14,76,22,64,75,77,88,10,95,10,70,88,31,40,44,14,58,83,72,55,98,77,7,92,64,84,7,1,26,61,53,52,84,22,34,33,57,57,5,60,77,88,69,11,90,41,0,84,64,26,40,80,43,5,21,2,31];

  assert.deepEqual(unique(list), [54,11,13,37,27,78,51,56,42,35,50,47,77,18,2,30,95,14,76,22,64,75,88,10,70,31,40,44,58,83,72,55,98,7,92,84,1,26,61,53,52,34,33,57,5,60,69,90,41,0,80,43,21]);
});


it('Should return array of unique numbers', function() {
  const list = [88,58,82,84,87,63,37,52,8,22,57,22,56,47,90,54,32,35,28,7,59,14,84,33,81,59,88,93,0,87,58,56,13,13,84,92,21,93,90,65,68,66,11,4,38,9,63,53,26,96,96,93,25,82,98,77,53,29,20,57,4,60,3,99,43,31,48,4,75,63,28,84,8,11,74,47,5,65];

  assert.deepEqual(unique(list), [88,58,82,84,87,63,37,52,8,22,57,56,47,90,54,32,35,28,7,59,14,33,81,93,0,13,92,21,65,68,66,11,4,38,9,53,26,96,25,98,77,29,20,60,3,99,43,31,48,75,74,5]);
});


it('Should return array of unique numbers', function() {
  const list = [29,50,11,67,62,61,72,15,38,67,69,29,9,77,1,22,20,96,71,62,30,35,32,21,56,19,55,40,1,96,64,70,61,38,48,33,63,92,43,22,43,26,27,89,60,94,63,92,38,75,46,57,39,22,4,1,61,16,55,40,96,99,56,18,4,88,40,25,96,70,86,77,92,70,54,0];

  assert.deepEqual(unique(list), [29,50,11,67,62,61,72,15,38,69,9,77,1,22,20,96,71,30,35,32,21,56,19,55,40,64,70,48,33,63,92,43,26,27,89,60,94,75,46,57,39,4,16,99,18,88,25,86,54,0]);
});


it('Should return array of unique numbers', function() {
  const list = [43,67,31,9,98,49,41,43,56,54,76,78,42,92,22,67,42,89,3,97,40,59,28,43,75,13,0,13,56,10,34,65,34,82,47,82,93,51,77,5,14,46,79,46,62,65,68,20,14,22,39,94,52,58,36,99,45,34,86,1,83,77,89,32,33,5,78,14,22,7,34,48,55,78,94,63,29,87,31,59,50,89,0,53,8,94,20,94,31,32,9,25,13,61,48,74,80,25,5];

  assert.deepEqual(unique(list), [43,67,31,9,98,49,41,56,54,76,78,42,92,22,89,3,97,40,59,28,75,13,0,10,34,65,82,47,93,51,77,5,14,46,79,62,68,20,39,94,52,58,36,99,45,86,1,83,32,33,7,48,55,63,29,87,50,53,8,25,61,74,80]);
});


it('Should return array of unique numbers', function() {
  const list = [85,65,2,32,85,4,95,75,24,58,94,82,69,48,49,92,44,40,74,22,60,88,39,87,36,85,9,95,72,25,47,99,8,38,47,80,33,45,25,83,48,28,71,16,85,60,51,76,56,78,51,82,42,47,29,17,74,81,80,56,45,85,26,34,65,40,44,29,0,59,72,19,94,79,20,27,89,97,87,6,36,56,46,75,49,48,31,64,48,90,93,31,99,76,76,95,10,65,39];

  assert.deepEqual(unique(list), [85,65,2,32,4,95,75,24,58,94,82,69,48,49,92,44,40,74,22,60,88,39,87,36,9,72,25,47,99,8,38,80,33,45,83,28,71,16,51,76,56,78,42,29,17,81,26,34,0,59,19,79,20,27,89,97,6,46,31,64,90,93,10]);
});


it('Should return array of unique numbers', function() {
  const list = [97,8,30,38,26,86,0,8,45,1,24,75,35,68,57,53,91,17,6,66,85,4];

  assert.deepEqual(unique(list), [97,8,30,38,26,86,0,45,1,24,75,35,68,57,53,91,17,6,66,85,4]);
});


it('Should return array of unique numbers', function() {
  const list = [12,0,99,61,32,68,74,38,23,22,16,1,17,77,89,22,21,83,45,7,56,76,0,54,23,34,25,79,48,87,85,22,46,18,24,96];

  assert.deepEqual(unique(list), [12,0,99,61,32,68,74,38,23,22,16,1,17,77,89,21,83,45,7,56,76,54,34,25,79,48,87,85,46,18,24,96]);
});


it('Should return array of unique numbers', function() {
  const list = [97,17,9,53,19,83,39,14,88,40,72,97,91,81,9,57,46,15,36,21,6,57,91,21,75,97,81,4,89,36,33,50,19,3,84,20,56,39,2,64,53,14,82,73,11,19,18,38,78,74,28,70,50,40,78,28,27,55,91,88,45,47,68,37,67,39,83,18,53,29,37,39,47,59,41,14,1,0,84,97,25,23,48,62,14];

  assert.deepEqual(unique(list), [97,17,9,53,19,83,39,14,88,40,72,91,81,57,46,15,36,21,6,75,4,89,33,50,3,84,20,56,2,64,82,73,11,18,38,78,74,28,70,27,55,45,47,68,37,67,29,59,41,1,0,25,23,48,62]);
});


it('Should return array of unique numbers', function() {
  const list = [28,57,30,3,33];

  assert.deepEqual(unique(list), [28,57,30,3,33]);
});


it('Should return array of unique numbers', function() {
  const list = [85,57,91,7,93,40,95,1,84,61,9,99,15,93,47,0,79,7,63,46,85,40,50,95,64,79,67,54,86,66,12,68,21,16,20,71,13,97,95,9,34,4,29,34,63,93,99,95,24,11,72,11,0,76,49,70,51,86,62,47,12,88,77,8,50,5,42,46,9,75,80,44,33,65,64,32,90,50,49,21,58,49,59,22,92,30,85,71,7,70,13];

  assert.deepEqual(unique(list), [85,57,91,7,93,40,95,1,84,61,9,99,15,47,0,79,63,46,50,64,67,54,86,66,12,68,21,16,20,71,13,97,34,4,29,24,11,72,76,49,70,51,62,88,77,8,5,42,75,80,44,33,65,32,90,58,59,22,92,30]);
});


it('Should return array of unique numbers', function() {
  const list = [57,51,97,70,48,58,59,2,34,21,92,99,3,84,58,21,10,96,42,91,32,41,69,63,28,36,25,57,35,16,81,29,44,55,19,79,69,14,21,76,28,56,78,11,24,47,7,70,5,97,16,63,87,50,44,76,95,98,3,49,11,78,87,71,90,31,70,35,80,85,18,65,57,88,15,16,6,96,66,91,59,8,63,72,72,29,83,20,42,93,37];

  assert.deepEqual(unique(list), [57,51,97,70,48,58,59,2,34,21,92,99,3,84,10,96,42,91,32,41,69,63,28,36,25,35,16,81,29,44,55,19,79,14,76,56,78,11,24,47,7,5,87,50,95,98,49,71,90,31,80,85,18,65,88,15,6,66,8,72,83,20,93,37]);
});


it('Should return array of unique numbers', function() {
  const list = [36,10,84,55,55,52];

  assert.deepEqual(unique(list), [36,10,84,55,52]);
});


it('Should return array of unique numbers', function() {
  const list = [13,93,64,73,26,46,1,57,34,44,57,96,36,32,57,13,13,80,94,73,79,28,53,46,98,60,1,0,54,88,54,78,84,1,9,21,18,13,5,31,46,62,29,95,38,75,65,92,45,17,22,94,82,80,70];

  assert.deepEqual(unique(list), [13,93,64,73,26,46,1,57,34,44,96,36,32,80,94,79,28,53,98,60,0,54,88,78,84,9,21,18,5,31,62,29,95,38,75,65,92,45,17,22,82,70]);
});


it('Should return array of unique numbers', function() {
  const list = [95,9,64,41,24,40,40,37,79,56,12,36,75,76,98,31];

  assert.deepEqual(unique(list), [95,9,64,41,24,40,37,79,56,12,36,75,76,98,31]);
});


it('Should return array of unique numbers', function() {
  const list = [69,34,37,16,60];

  assert.deepEqual(unique(list), [69,34,37,16,60]);
});


it('Should return array of unique numbers', function() {
  const list = [91,26,35,8,20,73,78,15,41,22,96,11,49,85,29,1,31,79,53,28,16,23,4,4,20,47,45,88,49,8,85,44,98,87,81];

  assert.deepEqual(unique(list), [91,26,35,8,20,73,78,15,41,22,96,11,49,85,29,1,31,79,53,28,16,23,4,47,45,88,44,98,87,81]);
});


it('Should return array of unique numbers', function() {
  const list = [80,96,79,63,59,0,49,20,16,11,3,79,22,69,8,22,84,41,39,37,66,2,86,8,25,3,11,17,22,32,45,58,9,14,5,43,17,87,21,24,62,61,52,86,26,95,35,87,94,15,69,64,6,3,82,59,25,1,56,74,76,36,20,59,95,20,85,57,33,68];

  assert.deepEqual(unique(list), [80,96,79,63,59,0,49,20,16,11,3,22,69,8,84,41,39,37,66,2,86,25,17,32,45,58,9,14,5,43,87,21,24,62,61,52,26,95,35,94,15,64,6,82,1,56,74,76,36,85,57,33,68]);
});


it('Should return array of unique numbers', function() {
  const list = [79,56,95,90,28,72,33,82,83,74,27,39,52,59,65,10,47,77,2,33,56,3,13,37,87,82,24];

  assert.deepEqual(unique(list), [79,56,95,90,28,72,33,82,83,74,27,39,52,59,65,10,47,77,2,3,13,37,87,24]);
});


it('Should return array of unique numbers', function() {
  const list = [75,1,87,59,18,48,10,72,63,43,63,91,71,91,40,96,96,45,67,31,37,22,12,15,9,44,42,19,23,31,60,66,19,59,64,65,61,48,67,94,74,54,67,66,5,16,87,78,96,51,71,26,98,71,41,5,23,92,95,88,64,91,99,3,53,53,90,14,83,53,42,47,45,29,2,39];

  assert.deepEqual(unique(list), [75,1,87,59,18,48,10,72,63,43,91,71,40,96,45,67,31,37,22,12,15,9,44,42,19,23,60,66,64,65,61,94,74,54,5,16,78,51,26,98,41,92,95,88,99,3,53,90,14,83,47,29,2,39]);
});


it('Should return array of unique numbers', function() {
  const list = [87,66,1,67,92,26,52,99,13,75,95,51,47,41,0,92,50,14,78,59,28,23,84,81,38];

  assert.deepEqual(unique(list), [87,66,1,67,92,26,52,99,13,75,95,51,47,41,0,50,14,78,59,28,23,84,81,38]);
});


it('Should return array of unique numbers', function() {
  const list = [18,6,46,55,53,60,82,94,62,9,11,84,22,10,7,29,99,27,68,66,18,69,96,57,86,22,34,64,91,12,59,87,71,7,53,90,70,82,53,16,96,43,5,9,73,59,59,20,49,19,84,58,64,65,31,20,92,26,69,51,35,78,66,75,36,15,94,29,12,78,54,29,4,17,22,10,67,66,57,34,34,65,32,11,98,54,96,7,48,41];

  assert.deepEqual(unique(list), [18,6,46,55,53,60,82,94,62,9,11,84,22,10,7,29,99,27,68,66,69,96,57,86,34,64,91,12,59,87,71,90,70,16,43,5,73,20,49,19,58,65,31,92,26,51,35,78,75,36,15,54,4,17,67,32,98,48,41]);
});


it('Should return array of unique numbers', function() {
  const list = [84,63,88,84,11,83,0,78,63,63,28,20,90,99,25,54,51,90,65,40,48,95,95,71,75,63,34,49,72,84,38,68,71,13,25,87,64,69,36,94,0,29,75,85,18,96,35,1,93,73,8,78,88,43,40,1,1,87,57,72,28,8,22,84,35,91];

  assert.deepEqual(unique(list), [84,63,88,11,83,0,78,28,20,90,99,25,54,51,65,40,48,95,71,75,34,49,72,38,68,13,87,64,69,36,94,29,85,18,96,35,1,93,73,8,43,57,22,91]);
});


it('Should return array of unique numbers', function() {
  const list = [47,80,34,56,70,52,7,85,58,74,74,64,6,81,12,72,5,27];

  assert.deepEqual(unique(list), [47,80,34,56,70,52,7,85,58,74,64,6,81,12,72,5,27]);
});


it('Should return array of unique numbers', function() {
  const list = [85,76,96,54,1,37,4,93,93,48,37,55,70,61,57,27,98,14,97,36,20,61,0,62,97,8,6,44,85,98,79,25,82,83,97,96,1,93,20,21,82,10,98,71,68,97,38,48];

  assert.deepEqual(unique(list), [85,76,96,54,1,37,4,93,48,55,70,61,57,27,98,14,97,36,20,0,62,8,6,44,79,25,82,83,21,10,71,68,38]);
});


it('Should return array of unique numbers', function() {
  const list = [34,46,9,68,11,80,97,28,93,41,69,17,74,81,69,82,22,99,56,92,37,67,39,97,12,33,17,69,40,8,42,61,99,42,71,10,63,89,86,32,21,12,41,48,37,8,11,48,17,52,64,88,75,62,35,69,96,85,65,81,41,18,92,56,90,67,43,51,21,66,15,62,1,17,77,25,2,92,45,16,89,12,94,70,6,94,31,0,44,88,94,22,42,54,50];

  assert.deepEqual(unique(list), [34,46,9,68,11,80,97,28,93,41,69,17,74,81,82,22,99,56,92,37,67,39,12,33,40,8,42,61,71,10,63,89,86,32,21,48,52,64,88,75,62,35,96,85,65,18,90,43,51,66,15,1,77,25,2,45,16,94,70,6,31,0,44,54,50]);
});


it('Should return array of unique numbers', function() {
  const list = [32,8,49,83,60,49,18,24,15,36,75,77,6,88,23,53,75,30,51,11,10,86,19,1,40,71,54,31,58,2,26,21,96,56,50,27,43,89,29,14,36,2,47,70,32,94,88,60,68,20,86,31,34,6,74,62,57,53,11,25,32,27,35,13,89,98,19,50,77,80,21,29,0,89,13,62,23,19,7,30,84,76];

  assert.deepEqual(unique(list), [32,8,49,83,60,18,24,15,36,75,77,6,88,23,53,30,51,11,10,86,19,1,40,71,54,31,58,2,26,21,96,56,50,27,43,89,29,14,47,70,94,68,20,34,74,62,57,25,35,13,98,80,0,7,84,76]);
});


it('Should return array of unique numbers', function() {
  const list = [75,70,55,32,15,98,27,41,2,48,49,91,61,99,72,34,28,75,47,27,80,88,5,41,25,44,34,36,46,24,55,7,82,89,84,58,66,1,85,75,33,81,39,53,7,80,65,88,53,29,89,76,76,26,48,40,47,85,28,37,67,43,66,69,14,68,23,43,38,69,24,73,88,25,9,36,80,67,57,70,8,63,66,42,49,96,35,15,66];

  assert.deepEqual(unique(list), [75,70,55,32,15,98,27,41,2,48,49,91,61,99,72,34,28,47,80,88,5,25,44,36,46,24,7,82,89,84,58,66,1,85,33,81,39,53,65,29,76,26,40,37,67,43,69,14,68,23,38,73,9,57,8,63,42,96,35]);
});
});
